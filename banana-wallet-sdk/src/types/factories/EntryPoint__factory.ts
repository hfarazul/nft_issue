/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000845761022c8181016001600160401b038111838210176200006e57829162005783833903906000f0801562000062576080526040516156f990816200008a82396080518181816113270152818161398d0152613cae0152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021614fb9565b005b60003560e01c80630396cb60146101775780631d7327561461016e5780631fad948c14610165578063205c28781461015c5780634b1d7cf5146101535780635287ce121461014a57806370a08231146101415780638f41ec5a14610138578063957122ab1461012f5780639b249f6914610126578063a61935311461011d578063b760faf914610114578063bb9fe6bf1461010b578063c23a5cea14610102578063d6383f94146100f9578063ee219423146100f05763fc7e286d0361000e576100eb611b15565b61000e565b506100eb6118fd565b506100eb611795565b506100eb6115fe565b506100eb61147e565b506100eb61143f565b506100eb61141e565b506100eb61127f565b506100eb6110ac565b506100eb611071565b506100eb610fec565b506100eb610e9c565b506100eb610b6d565b506100eb6109cc565b506100eb61071c565b506100eb610549565b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043563ffffffff811680820361031d576103187fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916102356102053373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91610211811515615111565b61022e610225600185015463ffffffff1690565b63ffffffff1690565b1115615176565b54926102fa6dffffffffffffffffffffffffffff946102b861025c34888460781c166120c8565b966102688815156151db565b61027481891115615240565b61029881610280610409565b941684906dffffffffffffffffffffffffffff169052565b6001602084015287166dffffffffffffffffffffffffffff166040830152565b63ffffffff83166060820152600060808201526102f53373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6152a5565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761036e57604052565b610376610322565b604052565b610100810190811067ffffffffffffffff82111761036e57604052565b67ffffffffffffffff811161036e57604052565b6060810190811067ffffffffffffffff82111761036e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761036e57604052565b6040519061041682610352565b565b6040519060c0820182811067ffffffffffffffff82111761036e57604052565b604051906040820182811067ffffffffffffffff82111761036e57604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610494575b01160190565b61049c610322565b61048e565b9291926104ad82610458565b916104bb60405193846103c8565b82948184528183011161031d578281602093846000960137010152565b73ffffffffffffffffffffffffffffffffffffffff81160361031d57565b60243590610416826104d8565b60c43590610416826104d8565b3590610416826104d8565b9181601f8401121561031d5782359167ffffffffffffffff831161031d576020838186019501011161031d57565b503461031d576101c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5767ffffffffffffffff60043581811161031d573660238201121561031d576105ac9036906024816004013591016104a1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601610180811261031d57610100604051916105e983610352565b1261031d576040516105fa8161037b565b6106026104f6565b815260443560208201526064356040820152608435606082015260a435608082015261062c610503565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a43591821161031d576106a09261068861069093369060040161051b565b9290916127a3565b6040519081529081906020820190565b0390f35b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261031d5760043567ffffffffffffffff9283821161031d578060238301121561031d57816004013593841161031d5760248460051b8301011161031d576024019190602435610719816104d8565b90565b503461031d5761072b366106a4565b610736829392611c75565b60005b848110610788575060009283915b858310610758576100218585611db2565b90919360019061077e61076c878987611d34565b6107768886611d12565b51908861223d565b0194019190610747565b6107b36107ac61079a83859795611d12565b516107a6848987611d34565b84612fe1565b9190612db8565b73ffffffffffffffffffffffffffffffffffffffff9291831661095e576108f0576107dd90612db8565b9116610882576107f257600101929092610739565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b0390fd5b61087e826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413334207369676e6174757265206572726f7200000000000000000000000060608201520190565b61087e836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601760408201527f414132322065787069726564206f72206e6f742064756500000000000000000060608201520190565b61087e846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413234207369676e6174757265206572726f7200000000000000000000000060608201520190565b503461031d576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043590610a0a826104d8565b60243591600092338452836020528284206dffffffffffffffffffffffffffff815416808311610b1057610b0d9383610a9a889594610a61610a4e889788976120b1565b6dffffffffffffffffffffffffffff1690565b6dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b865173ffffffffffffffffffffffffffffffffffffffff831681526020810182905233907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90604090a273ffffffffffffffffffffffffffffffffffffffff875192165af1610b07611d82565b5061561d565b51f35b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b503461031d57610b7c366106a4565b6000805b838210610d4257610b919150611c75565b6000805b848110610ca857505060008093815b818110610bdd57610021868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d81604051a2611db2565b610c43610beb82848a6123bd565b610c16610bfd610bfd6020840161245f565b73ffffffffffffffffffffffffffffffffffffffff1690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6000604051a28061240b565b906000915b808310610c6057505050610c5b9061238f565b610ba4565b90919497610c9b610c95610ca192610c8f8c8b610c8882610c828e8b8d611d34565b92611d12565b519161223d565b906120c8565b9961238f565b9561238f565b9190610c48565b610cb38186886123bd565b6020610ccb610cc2838061240b565b9290930161245f565b9173ffffffffffffffffffffffffffffffffffffffff60009316905b828410610d005750505050610cfb9061238f565b610b95565b90919294610c9b81610d3585610d2e610d1c610d3a968d611d12565b51610d288c8b8a611d34565b85612fe1565b908b612d70565b61238f565b929190610ce7565b610d4d8285876123bd565b90610d58828061240b565b92610d68610bfd6020830161245f565b9173ffffffffffffffffffffffffffffffffffffffff8316610d8d6001821415612469565b610dae575b505050610da891610da2916120c8565b9161238f565b90610b80565b909592610dc76040999693999895989788810190611ea7565b92908a3b1561031d5789938b918a5193849283927fe3563a4f00000000000000000000000000000000000000000000000000000000845260049e8f850193610e0e94612603565b03815a93600094fa9081610e83575b50610e6d5786517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16818a0190815281906020010390fd5b9497509295509093509181610da2610da8610d92565b80610e90610e9692610398565b80611066565b38610e1d565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d576106a073ffffffffffffffffffffffffffffffffffffffff600435610ef0816104d8565b608060409283928351610f0281610352565b600093818580935282602082015282878201528260608201520152168152806020522090610f9165ffffffffffff6001835194610f3e86610352565b80546dffffffffffffffffffffffffffff8082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956dffffffffffffffffffffffffffff808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5773ffffffffffffffffffffffffffffffffffffffff60043561103d816104d8565b16600052600060205260206dffffffffffffffffffffffffffff60406000205416604051908152f35b600091031261031d57565b503461031d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57602060405160018152f35b503461031d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57600467ffffffffffffffff813581811161031d576110fd903690840161051b565b90506024359161110c836104d8565b60443590811161031d57611123903690850161051b565b929091159081611275575b5061120e57601482101561117e575b61087e836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160409060208152600060208201520190565b61118e61119a92611194926129c8565b906129d6565b60601c90565b3b156111a757388061113d565b61087e906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b61087e836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b153861112e565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043567ffffffffffffffff811161031d576112d1602491369060040161051b565b906113076040519283927f570e1a3600000000000000000000000000000000000000000000000000000000845260048401612b6c565b0360208273ffffffffffffffffffffffffffffffffffffffff92816000857f0000000000000000000000000000000000000000000000000000000000000000165af19182156113b9575b600092611389575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b6113ab91925060203d81116113b2575b6113a381836103c8565b810190612b57565b9038611359565b503d611399565b6113c1612074565b611351565b908161016091031261031d5790565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261031d576004359067ffffffffffffffff821161031d57610719916004016113c6565b503461031d576020611437611432366113d5565b6128fe565b604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57610021600435611479816104d8565b6150a5565b503461031d576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126115fb573381528060205260408120600181019063ffffffff82541690811561159d576115386114fd611560936114ef6114ea855460ff9060701c1690565b615409565b65ffffffffffff421661546e565b84547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff16602082901b69ffffffffffff000000001617909455565b7fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff8154169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a2604051f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b80fd5b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5761002160008080600435611641816104d8565b61166b3373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61172261168d610a4e83546dffffffffffffffffffffffffffff9060781c1690565b91611699831515615489565b6116fa600182016116d265ffffffffffff6116be835465ffffffffffff9060201c1690565b166116ca8115156154ee565b421015615553565b80547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b6040805173ffffffffffffffffffffffffffffffffffffffff841681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a273ffffffffffffffffffffffffffffffffffffffff60405192165af161178f611d82565b506155b8565b503461031d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5767ffffffffffffffff60043581811161031d576117e69036906004016113c6565b602435916117f3836104d8565b60443590811161031d5761180e61087e91369060040161051b565b611816611bf2565b61181f85612c6b565b61183261182c8287612e79565b90614eb2565b94611842826000924384526120e0565b96438252819360609573ffffffffffffffffffffffffffffffffffffffff83166118c9575b5050505060800151936118966040611888602084015165ffffffffffff1690565b92015165ffffffffffff1690565b906040519687967f8b7ac980000000000000000000000000000000000000000000000000000000008852600488016126d3565b839550839496506118e360409492939451809481936126c5565b03925af19060806118f2611d82565b929190388080611867565b503461031d5761190c366113d5565b611914611bf2565b61191d82612c6b565b6119278183612e79565b825160a001519193916119549073ffffffffffffffffffffffffffffffffffffffff16614f64565b614f64565b9061197861194f855173ffffffffffffffffffffffffffffffffffffffff90511690565b94611981612990565b506119b061199460409586810190611ea7565b90600060148310611b0d575061118e61194f92611194926129c8565b916119ba91614eb2565b805173ffffffffffffffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff821660018114916080880151978781015191886020820151611a0f9065ffffffffffff1690565b91015165ffffffffffff16916060015192611a28610418565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a088015215159081611b04575b50611a99575061087e92519485947fe0cff05f00000000000000000000000000000000000000000000000000000000865260048601612afd565b919061087e93611aa884614f64565b611acf611ab3610438565b73ffffffffffffffffffffffffffffffffffffffff9096168652565b6020850152519586957ffaecb4e400000000000000000000000000000000000000000000000000000000875260048701612a6b565b90501538611a5f565b915050614f64565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5773ffffffffffffffffffffffffffffffffffffffff600435611b66816104d8565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926dffffffffffffffffffffffffffff90818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b60209067ffffffffffffffff8111611be5575b60051b0190565b611bed610322565b611bde565b60405190611bff82610352565b604051608083610100830167ffffffffffffffff811184821017611c68575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b611c70610322565b611c1e565b90611c7f82611bcb565b611c8c60405191826103c8565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611cba8294611bcb565b019060005b828110611ccb57505050565b602090611cd6611bf2565b82828501015201611cbf565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020918151811015611d27575b60051b010190565b611d2f611ce2565b611d1f565b9190811015611d75575b60051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18136030182121561031d570190565b611d7d611ce2565b611d3e565b3d15611dad573d90611d9382610458565b91611da160405193846103c8565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff168015611e495760008092918192604051915af1611de3611d82565b5015611deb57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561031d570180359067ffffffffffffffff821161031d5760200191813603831361031d57565b9081602091031261031d575190565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b918091926000905b828210611f66575011611f5f575050565b6000910152565b91508060209183015181860152018291611f4e565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611fb781518092818752878088019101611f46565b0116010190565b90611fd860809161071996946101c0808652850191611f07565b9360e0815173ffffffffffffffffffffffffffffffffffffffff80825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611f7b565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181106120bc570390565b6120c4612081565b0390565b811981116120d4570190565b6120dc612081565b0190565b905a918160206120f96060830151936060810190611ea7565b906121328560405195869485947f1d73275600000000000000000000000000000000000000000000000000000000865260048601611fbe565b03816000305af16000918161220d575b50612206575060206000803e7fdeaddead000000000000000000000000000000000000000000000000000000006000511461219957612193612188610719945a906120b1565b6080840151906120c8565b916145f4565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9250505090565b61222f91925060203d8111612236575b61222781836103c8565b810190611ef8565b9038612142565b503d61221d565b909291925a938060206122596060830151946060810190611ea7565b906122928660405195869485947f1d73275600000000000000000000000000000000000000000000000000000000865260048601611fbe565b03816000305af16000918161236f575b50612368575060206000803e7fdeaddead00000000000000000000000000000000000000000000000000000000600051146122fa576122f46122e961071995965a906120b1565b6080830151906120c8565b926148d7565b61087e836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9450505050565b61238891925060203d81116122365761222781836103c8565b90386122a2565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146120d4570190565b91908110156123fe575b60051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561031d570190565b612406611ce2565b6123c7565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561031d570180359067ffffffffffffffff821161031d57602001918160051b3603831361031d57565b35610719816104d8565b1561247057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561031d57016020813591019167ffffffffffffffff821161031d57813603831361031d57565b610719916125498161252f84610510565b73ffffffffffffffffffffffffffffffffffffffff169052565b602082013560208201526125e461259561257a61256960408601866124ce565b610160806040880152860191611f07565b61258760608601866124ce565b908583036060870152611f07565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e084015261010080850135908401526101206125d7818601866124ce565b9185840390860152611f07565b916125f561014091828101906124ce565b929091818503910152611f07565b949391929083604087016040885252606086019360608160051b8801019482600090815b8483106126465750505050505084602061071995968503910152611f07565b9091929394977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b820301855288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1843603018112156126c157600191846126af920161251e565b98602090810196950193019190612627565b8280fd5b908092918237016000815290565b92909361071996959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611f7b565b1561271657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b90604061071992600081528160208201520190611f7b565b604090610719939281528160208201520190611f7b565b909291925a936127b430331461270f565b8151946040860151955a6113886060830151890101116128d4576107199660009580516127fb575b505050906127f5915a90036080840151019436916104a1565b91614b3f565b61282a9161282691612821855173ffffffffffffffffffffffffffffffffffffffff1690565b615682565b1590565b612836575b80806127dc565b6127f592919450612845615694565b908151612859575b5050600193909161282f565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20173ffffffffffffffffffffffffffffffffffffffff6020870151926128ca60206128b8835173ffffffffffffffffffffffffffffffffffffffff1690565b9201519560405193849316968361278c565b0390a3388061284d565b7fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b8061290d610140820182611ea7565b50037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081016040519182016040528082526020820192833751902060405160208101918252306040820152466060820152606081526080810181811067ffffffffffffffff821117612983575b60405251902090565b61298b610322565b61297a565b604051906040820182811067ffffffffffffffff8211176129bb575b60405260006020838281520152565b6129c3610322565b6129ac565b9060141161031d5790601490565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009035818116939260148110612a0b57505050565b60140360031b82901b16169150565b9060c060a061071993805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611f7b565b9294612acc61041695612aba610100959998612aa8612a94602097610140808c528b0190612a1a565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b73ffffffffffffffffffffffffffffffffffffffff81511660e0850152015191019060208091805184520151910152565b612b4661041694612b34612b1f60a0959998969960e0865260e0860190612a1a565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b9081602091031261031d5751610719816104d8565b916020610719938181520191611f07565b90612bac73ffffffffffffffffffffffffffffffffffffffff9161071997959694606085526060850191611f07565b941660208201526040818503910152611f07565b60009060033d11612bcd57565b905060046000803e60005160e01c90565b600060443d10610719576040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc91823d016004833e815167ffffffffffffffff918282113d602484011117612c5a57818401948551938411612c62573d85010160208487010111612c5a5750610719929101602001906103c8565b949350505050565b50949350505050565b612c786040820182611ea7565b612c90612c848461245f565b93610120810190611ea7565b9290303b1561031d57600093612cd49160405196879586957f957122ab00000000000000000000000000000000000000000000000000000000875260048701612b7d565b0381305afa9081612d5d575b50610416576001612cef612bc0565b6308c379a014612d08575b612d0057565b610416612074565b612d10612bde565b80612d1c575b50612cfa565b80516000925015612d165761087e906040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301612774565b80610e90612d6a92610398565b38612ce0565b929190612d7c90612db8565b909273ffffffffffffffffffffffffffffffffffffffff8080951691160361095e576108f057612dab90612db8565b9116610882576107f25750565b8015612e0b57612dc790614e57565b73ffffffffffffffffffffffffffffffffffffffff65ffffffffffff806040840151164211908115612dfb575b5091511691565b9050602083015116421038612df4565b50600090600090565b15612e1b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b916000915a93815190612e8c82826131ab565b612e95816128fe565b6020840152612ed36effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e085013517171115612e14565b612edc8261326d565b612ee781858461332e565b9790612ef243600052565b73ffffffffffffffffffffffffffffffffffffffff612f2a60a0606097015173ffffffffffffffffffffffffffffffffffffffff1690565b16612fc7575b505a810360a084013510612f5a5760809360c092604087015260608601525a900391013501910152565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601e60408201527f41413430206f76657220766572696669636174696f6e4761734c696d6974000060608201520190565b90935081612fd89297508584614054565b95909238612f30565b9290916000925a8251612ff481846131ab565b612ffd836128fe565b602085015261303b6effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e087013517171115612e14565b6130448161326d565b6130508186868b61369a565b989061305b43600052565b73ffffffffffffffffffffffffffffffffffffffff61309360a0606096015173ffffffffffffffffffffffffffffffffffffffff1690565b1661312b575b505a840360a0860135106130c55750604085015260608401526080919060c0905a900391013501910152565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b9092508161313d9298508686856142e7565b96909138613099565b1561314d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b61321d906131d56131bb8261245f565b73ffffffffffffffffffffffffffffffffffffffff168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e0840152610120810190611ea7565b9081156132625761324761119461118e8460a094613242601461041699981015613146565b6129c8565b73ffffffffffffffffffffffffffffffffffffffff16910152565b505060a06000910152565b60a081015173ffffffffffffffffffffffffffffffffffffffff16156132af5760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001613292565b6132d06040929594939560608352606083019061251e565b9460208201520152565b90610416602f60405180947f414132332072657665727465643a200000000000000000000000000000000000602083015261331e8151809260208686019101611f46565b810103600f8101855201836103c8565b916000926000925a936133fc602083519361335d855173ffffffffffffffffffffffffffffffffffffffff1690565b9561337561336e6040830183611ea7565b9084613905565b60a086015173ffffffffffffffffffffffffffffffffffffffff169061339a43600052565b85809373ffffffffffffffffffffffffffffffffffffffff809416159889613632575b60600151908601516040517f3a871cdd0000000000000000000000000000000000000000000000000000000081529788968795869390600485016132b8565b03938a1690f1829181613612575b50613609575060019061341b612bc0565b6308c379a0146135b5575b50613548575b613439575b50505a900391565b6134639073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61347e610a4e82546dffffffffffffffffffffffffffff1690565b8083116134db576134d4926dffffffffffffffffffffffffffff9103166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b3880613431565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601760408201527f41413231206469646e2774207061792070726566756e6400000000000000000060608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b6135bd612bde565b90816135c95750613426565b61087e916135d791506132da565b6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301612774565b955061342c9050565b61362b91925060203d81116122365761222781836103c8565b903861340a565b9450613678610a4e6136648c73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b546dffffffffffffffffffffffffffff1690565b8b81111561368f5750856060835b969150506133bd565b606087918d03613686565b90926000936000935a946136e360208351936136ca855173ffffffffffffffffffffffffffffffffffffffff1690565b956133756136db6040830183611ea7565b90848c613c23565b03938a1690f18291816138e5575b506138dc5750600190613702612bc0565b6308c379a014613886575b50613818575b613721575b5050505a900391565b61374b9073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91613767610a4e84546dffffffffffffffffffffffffffff1690565b908183116137b2575082547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000169190036dffffffffffffffffffffffffffff16179055388080613718565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b61087e846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b61388e612bde565b908161389a575061370d565b86916138a691506132da565b9061087e6040519283927f220266b60000000000000000000000000000000000000000000000000000000084526004840161278c565b96506137139050565b6138fe91925060203d81116122365761222781836103c8565b90386136f1565b90918061391157505050565b81515173ffffffffffffffffffffffffffffffffffffffff1692833b613bb657606083510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280613970878760048401612b6c565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f1918215613ba9575b600092613b89575b50808216958615613b1c5716809503613aaf573b15613a425761119461118e7fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93613a09936129c8565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a3565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152602060408201527f4141313520696e6974436f6465206d757374206372656174652073656e64657260608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b613ba291925060203d81116113b2576113a381836103c8565b90386139bf565b613bb1612074565b6139b7565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601f60408201527f414131302073656e64657220616c726561647920636f6e73747275637465640060608201520190565b92909181613c32575b50505050565b82515173ffffffffffffffffffffffffffffffffffffffff1693843b613eda57606084510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280613c91888860048401612b6c565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f1918215613ecd575b600092613ead575b50808216968715613e3f5716809603613dd1573b15613d6b575061119461118e7fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93613d2b936129c8565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a338808080613c2c565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b61087e826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b61087e846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b613ec691925060203d81116113b2576113a381836103c8565b9038613ce0565b613ed5612074565b613cd8565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b15613f4757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152fd5b919060408382031261031d57825167ffffffffffffffff811161031d5783019080601f8301121561031d57815191613fdc83610458565b91613fea60405193846103c8565b8383526020848301011161031d5760209261400a91848085019101611f46565b92015190565b90610416602f60405180947f414133332072657665727465643a200000000000000000000000000000000000602083015261331e8151809260208686019101611f46565b93919260609460009460009380519261409360a08a86015195614078888811613f40565b015173ffffffffffffffffffffffffffffffffffffffff1690565b916140be8373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b946140da610a4e87546dffffffffffffffffffffffffffff1690565b9685881061427a5773ffffffffffffffffffffffffffffffffffffffff60208a98946141508a966dffffffffffffffffffffffffffff8b6141899e03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b015194604051998a98899788937ff465c77e000000000000000000000000000000000000000000000000000000008552600485016132b8565b0395169103f1908183918493614254575b5061424d5750506001906141ac612bc0565b6308c379a01461422b575b506141be57565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601660408201527f4141333320726576657274656420286f72204f4f47290000000000000000000060608201520190565b614233612bde565b908161423f57506141b7565b61087e916135d79150614010565b9450925050565b90925061427391503d8085833e61426b81836103c8565b810190613fa5565b913861419a565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b91949293909360609560009560009382519061430e60a08b84015193614078848611613f40565b936143398573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b614354610a4e82546dffffffffffffffffffffffffffff1690565b8781106144af579273ffffffffffffffffffffffffffffffffffffffff60208a989693946141508a966dffffffffffffffffffffffffffff8d6143ce9e9c9a03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b0395169103f1908183918493614491575b506144895750506001906143f1612bc0565b6308c379a01461446a575b506144045750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b614472612bde565b908161447e57506143fc565b6138a6925050614010565b955093505050565b9092506144a891503d8085833e61426b81836103c8565b91386143df565b61087e8a6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b6003111561452757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92919061457460409160028652606060208701526060860190611f7b565b930152565b93929190600381101561452757604091614574918652606060208701526060860190611f7b565b90610416603660405180947f4141353020706f73744f702072657665727465643a200000000000000000000060208301526145e48151809260208686019101611f46565b81010360168101855201836103c8565b929190925a9360009180519161460983614e10565b9260a081019561462d875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9390848116908161479c5750505061466e825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a9003019384029760408401908982511061472f577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f946146ba6020928c61472a95510390614fc2565b0151948960206146fc6146e1865173ffffffffffffffffffffffffffffffffffffffff1690565b9a5173ffffffffffffffffffffffffffffffffffffffff1690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152602060408201527f414135312070726566756e642062656c6f772061637475616c476173436f737460608201520190565b9a9180516147ac575b5050614670565b6060850151600099509091803b156148d35791899189836147ff956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c029060048401614556565b0393f190816148c0575b506148bb576001614818612bc0565b6308c379a01461489c575b61482f575b38806147a5565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b6148a4612bde565b806148af5750614823565b6135d761087e916145a0565b614828565b80610e906148cd92610398565b38614809565b8980fd5b9392915a906000928051906148eb82614e10565b9360a083019661490f885173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff95908681169081614a0557505050614950845173ffffffffffffffffffffffffffffffffffffffff1690565b915b5a9003019485029860408301908a82511061499f57507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9493926146ba61472a938c602094510390614fc2565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b93918051614a15575b5050614952565b606087015160009a509091803b15614b3b57918a918a83614a68956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c029060048401614556565b0393f19081614b28575b50614b23576001614a81612bc0565b6308c379a014614b06575b614a98575b3880614a0e565b61087e8b6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b614b0e612bde565b80614b195750614a8c565b6138a68d916145a0565b614a91565b80610e90614b3592610398565b38614a72565b8a80fd5b909392915a94805191614b5183614e10565b9260a0810195614b75875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff938185169182614c5d57505050614bb5825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a9003019384029760408401908982511061472f577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94614c016020928c61472a95510390614fc2565b614c0a8861451d565b015194896020614c316146e1865173ffffffffffffffffffffffffffffffffffffffff1690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151614c6d575b5050614bb7565b878402614c798a61451d565b60028a14614d04576060860151823b1561031d57614ccc93600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614579565b0393f18015614cf7575b614ce4575b505b3880614c66565b80610e90614cf192610398565b38614cdb565b614cff612074565b614cd6565b6060860151823b1561031d57614d4f93600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614579565b0393f19081614dfd575b50614df8576001614d68612bc0565b6308c379a014614de5575b15614cdd576040517f220266b60000000000000000000000000000000000000000000000000000000081528061087e600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b614ded612bde565b806148af5750614d73565b614cdd565b80610e90614e0a92610398565b38614d59565b60e060c0820151910151808214614e3457480180821015614e2f575090565b905090565b5090565b60405190614e45826103ac565b60006040838281528260208201520152565b614e5f614e38565b5065ffffffffffff808260a01c168015614eab575b60405192614e81846103ac565b73ffffffffffffffffffffffffffffffffffffffff8116845260d01c602084015216604082015290565b5080614e74565b614ec7614ecd91614ec1614e38565b50614e57565b91614e57565b9073ffffffffffffffffffffffffffffffffffffffff9182825116928315614f59575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410614f51575b50808511614f49575b5060405195614f37876103ac565b16855216602084015216604082015290565b935038614f29565b925038614f20565b815181169350614ef0565b9073ffffffffffffffffffffffffffffffffffffffff614f82612990565b9216600052600060205263ffffffff600160406000206dffffffffffffffffffffffffffff815460781c1685520154166020830152565b610416336150a5565b73ffffffffffffffffffffffffffffffffffffffff16600052600060205260406000206150016dffffffffffffffffffffffffffff92838354166120c8565b918083116150475761041692166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff906150c53482614fc2565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206dffffffffffffffffffffffffffff60406000205416604051908152a2565b1561511857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b1561517d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b156151e257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b1561524757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b9065ffffffffffff60806001610416946153056dffffffffffffffffffffffffffff86511682906dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b602085015115156eff000000000000000000000000000082549160701b16807fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff83161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff6060820151167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008554161784550151167fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff69ffffffffffff0000000083549260201b169116179055565b1561541057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b9065ffffffffffff80809316911680920381116120d4570190565b1561549057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b156154f557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b1561555a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b156155bf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b1561562457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b9060009283809360208451940192f190565b3d6108008082116156bb575b50604051906020818301016040528082526000602083013e90565b9050386156a056fea2646970667358221220a7cf0a78d8ef6a70a81703e9d5f45a9ce4ef0cc6a23f5949249536da056a158a64736f6c634300080f00336080806040523461001657610210908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100c95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c95760043567ffffffffffffffff918282116100c957366023830112156100c95781600401359283116100c95736602484840101116100c9576100c561009e84602485016100fc565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90806014116101bb5767ffffffffffffffff917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec82018381116101cd575b604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8701160116850190858210908211176101c0575b604052808452602084019036848401116101bb576020946000600c819682946014880187378301015251923560601c5af19060005191156101b557565b60009150565b600080fd5b6101c86100cc565b610178565b6101d56100cc565b61013a56fea264697066735822122068d4796dda7cf8f9be558c618ab1d1bdb6ae38483e0847122ad465faad779a3864736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
