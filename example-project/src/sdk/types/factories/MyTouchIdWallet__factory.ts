/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MyTouchIdWallet,
  MyTouchIdWalletInterface,
} from "../MyTouchIdWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_qValues",
        type: "uint256[2]",
      },
      {
        internalType: "address",
        name: "_ellipticCurve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUsedTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingWalletFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260006001553480156200001657600080fd5b50604051620020543803806200205483398181016040528101906200003c9190620003d8565b83600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002906002620000d19291906200011d565b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200044a565b82600281019282156200014f579160200282015b828111156200014e57825182559160200191906001019062000131565b5b5090506200015e919062000162565b5090565b5b808211156200017d57600081600090555060010162000163565b5090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bd8262000190565b9050919050565b6000620001d182620001b0565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b6200021481620001b0565b81146200022057600080fd5b50565b600081519050620002348162000209565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200028a826200023f565b810181811067ffffffffffffffff82111715620002ac57620002ab62000250565b5b80604052505050565b6000620002c162000181565b9050620002cf82826200027f565b919050565b600067ffffffffffffffff821115620002f257620002f162000250565b5b602082029050919050565b600080fd5b6000819050919050565b620003178162000302565b81146200032357600080fd5b50565b60008151905062000337816200030c565b92915050565b6000620003546200034e84620002d4565b620002b5565b90508060208402830185811115620003715762000370620002fd565b5b835b818110156200039e578062000389888262000326565b84526020840193505060208101905062000373565b5050509392505050565b600082601f830112620003c057620003bf6200023a565b5b6002620003cf8482856200033d565b91505092915050565b60008060008060a08587031215620003f557620003f46200018b565b5b60006200040587828801620001f2565b9450506020620004188782880162000223565b93505060406200042b87828801620003a8565b92505060806200043e8782880162000223565b91505092959194509250565b611bfa806200045a6000396000f3fe6080604052600436106100c65760003560e01c80638da5cb5b1161007f578063b0d691fe11610059578063b0d691fe14610228578063bf98a6e414610253578063c399ec881461027e578063d0cb75fa146102a9576100cd565b80638da5cb5b146101a9578063a9059cbb146101d4578063affed0e0146101fd576100cd565b80630825d1fc146100d25780631b71bb6e146100fb5780633ef91dfb146101245780634a58db191461014d5780634d44560d1461015757806380c5c7d014610180576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100f960048036038101906100f49190610dbc565b6102d2565b005b34801561010757600080fd5b50610122600480360381019061011d9190610e3f565b610317565b005b34801561013057600080fd5b5061014b60048036038101906101469190610ed1565b61032b565b005b6101556103f1565b005b34801561016357600080fd5b5061017e60048036038101906101799190610f83565b610471565b005b34801561018c57600080fd5b506101a760048036038101906101a29190611019565b6104f1565b005b3480156101b557600080fd5b506101be610546565b6040516101cb919061109c565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190610f83565b61056c565b005b34801561020957600080fd5b506102126105bf565b60405161021f91906110c6565b60405180910390f35b34801561023457600080fd5b5061023d6105ee565b60405161024a9190611140565b60405180910390f35b34801561025f57600080fd5b50610268610618565b60405161027591906110c6565b60405180910390f35b34801561028a57600080fd5b5061029361061e565b6040516102a091906110c6565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb91906111b1565b6106a6565b005b6102da6107b8565b6102e584848461082f565b60008480604001906102f79190611241565b905003610308576103078461095a565b5b61031181610a07565b50505050565b61031f610aa3565b61032881610aad565b50565b610333610b6d565b6000806000808585600181811061034d5761034c6112a4565b5b905060200281019061035f9190611241565b81019061036c91906114c1565b93509350935093506103e788888888600081811061038d5761038c6112a4565b5b905060200281019061039f9190611241565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c35565b5050505050505050565b60006103fb6105ee565b73ffffffffffffffffffffffffffffffffffffffff163460405161041e9061155b565b60006040518083038185875af1925050503d806000811461045b576040519150601f19603f3d011682016040523d82523d6000602084013e610460565b606091505b505090508061046e57600080fd5b50565b610479610b6d565b6104816105ee565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104bb92919061157f565b600060405180830381600087803b1580156104d557600080fd5b505af11580156104e9573d6000803e3d6000fd5b505050505050565b610540848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c35565b50505050565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610574610b6d565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ba573d6000803e3d6000fd5b505050565b60008060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60006106286105ee565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610660919061109c565b602060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906115bd565b905090565b6106ae610b6d565b8181905084849050146106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed90611647565b60405180910390fd5b60005b848490508110156107b15761079e85858381811061071a576107196112a4565b5b905060200201602081019061072f9190610e3f565b6000858585818110610744576107436112a4565b5b90506020028101906107569190611241565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c35565b80806107a990611696565b9150506106f9565b5050505050565b6107c06105ee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108249061172a565b60405180910390fd5b565b6000806000858061014001906108459190611241565b810190610852919061174a565b9250925092506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304e960d78360405180604001604052808881526020018781525060026040518463ffffffff1660e01b81526004016108ce9392919061191b565b602060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f919061198a565b905080610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094890611a03565b60405180910390fd5b50505050505050565b806020013560008081819054906101000a90046bffffffffffffffffffffffff168092919061098890611a3b565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611abb565b60405180910390fd5b50565b60008114610aa05760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90604051610a579061155b565b600060405180830381858888f193505050503d8060008114610a95576040519150601f19603f3d011682016040523d82523d6000602084013e610a9a565b606091505b50509050505b50565b610aab610b6d565b565b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a60405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bf457503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a90611b27565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610c5e9190611bad565b60006040518083038185875af1925050503d8060008114610c9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ca0565b606091505b509150915081610cb257805160208201fd5b5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b60006101608284031215610ce957610ce8610ccd565b5b81905092915050565b6000819050919050565b610d0581610cf2565b8114610d1057600080fd5b50565b600081359050610d2281610cfc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d5382610d28565b9050919050565b610d6381610d48565b8114610d6e57600080fd5b50565b600081359050610d8081610d5a565b92915050565b6000819050919050565b610d9981610d86565b8114610da457600080fd5b50565b600081359050610db681610d90565b92915050565b60008060008060808587031215610dd657610dd5610cc3565b5b600085013567ffffffffffffffff811115610df457610df3610cc8565b5b610e0087828801610cd2565b9450506020610e1187828801610d13565b9350506040610e2287828801610d71565b9250506060610e3387828801610da7565b91505092959194509250565b600060208284031215610e5557610e54610cc3565b5b6000610e6384828501610d71565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e9157610e90610e6c565b5b8235905067ffffffffffffffff811115610eae57610ead610e71565b5b602083019150836020820283011115610eca57610ec9610e76565b5b9250929050565b60008060008060608587031215610eeb57610eea610cc3565b5b6000610ef987828801610d71565b9450506020610f0a87828801610da7565b935050604085013567ffffffffffffffff811115610f2b57610f2a610cc8565b5b610f3787828801610e7b565b925092505092959194509250565b6000610f5082610d28565b9050919050565b610f6081610f45565b8114610f6b57600080fd5b50565b600081359050610f7d81610f57565b92915050565b60008060408385031215610f9a57610f99610cc3565b5b6000610fa885828601610f6e565b9250506020610fb985828601610da7565b9150509250929050565b60008083601f840112610fd957610fd8610e6c565b5b8235905067ffffffffffffffff811115610ff657610ff5610e71565b5b60208301915083600182028301111561101257611011610e76565b5b9250929050565b6000806000806060858703121561103357611032610cc3565b5b600061104187828801610d71565b945050602061105287828801610da7565b935050604085013567ffffffffffffffff81111561107357611072610cc8565b5b61107f87828801610fc3565b925092505092959194509250565b61109681610d48565b82525050565b60006020820190506110b1600083018461108d565b92915050565b6110c081610d86565b82525050565b60006020820190506110db60008301846110b7565b92915050565b6000819050919050565b60006111066111016110fc84610d28565b6110e1565b610d28565b9050919050565b6000611118826110eb565b9050919050565b600061112a8261110d565b9050919050565b61113a8161111f565b82525050565b60006020820190506111556000830184611131565b92915050565b60008083601f84011261117157611170610e6c565b5b8235905067ffffffffffffffff81111561118e5761118d610e71565b5b6020830191508360208202830111156111aa576111a9610e76565b5b9250929050565b600080600080604085870312156111cb576111ca610cc3565b5b600085013567ffffffffffffffff8111156111e9576111e8610cc8565b5b6111f58782880161115b565b9450945050602085013567ffffffffffffffff81111561121857611217610cc8565b5b61122487828801610e7b565b925092505092959194509250565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261125e5761125d611232565b5b80840192508235915067ffffffffffffffff8211156112805761127f611237565b5b60208301925060018202360383131561129c5761129b61123c565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61131c826112d3565b810181811067ffffffffffffffff8211171561133b5761133a6112e4565b5b80604052505050565b600061134e610cb9565b905061135a8282611313565b919050565b600067ffffffffffffffff82111561137a576113796112e4565b5b602082029050919050565b60006113986113938461135f565b611344565b905080602084028301858111156113b2576113b1610e76565b5b835b818110156113db57806113c78882610da7565b8452602084019350506020810190506113b4565b5050509392505050565b600082601f8301126113fa576113f9610e6c565b5b6002611407848285611385565b91505092915050565b600067ffffffffffffffff82111561142b5761142a6112e4565b5b602082029050919050565b600061144961144484611410565b611344565b9050806040840283018581111561146357611462610e76565b5b835b8181101561148c578061147888826113e5565b845260208401935050604081019050611465565b5050509392505050565b600082601f8301126114ab576114aa610e6c565b5b60026114b8848285611436565b91505092915050565b60008060008061014085870312156114dc576114db610cc3565b5b60006114ea878288016113e5565b94505060406114fb87828801611496565b93505060c061150c878288016113e5565b92505061010061151e878288016113e5565b91505092959194509250565b600081905092915050565b50565b600061154560008361152a565b915061155082611535565b600082019050919050565b600061156682611538565b9150819050919050565b61157981610f45565b82525050565b60006040820190506115946000830185611570565b6115a160208301846110b7565b9392505050565b6000815190506115b781610d90565b92915050565b6000602082840312156115d3576115d2610cc3565b5b60006115e1848285016115a8565b91505092915050565b600082825260208201905092915050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b60006116316013836115ea565b915061163c826115fb565b602082019050919050565b6000602082019050818103600083015261166081611624565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116a182610d86565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116d3576116d2611667565b5b600182019050919050565b7f77616c6c65743a206e6f742066726f6d20456e747279506f696e740000000000600082015250565b6000611714601b836115ea565b915061171f826116de565b602082019050919050565b6000602082019050818103600083015261174381611707565b9050919050565b60008060006060848603121561176357611762610cc3565b5b600061177186828701610da7565b935050602061178286828701610da7565b925050604061179386828701610d13565b9150509250925092565b6117a681610cf2565b82525050565b600060029050919050565b600081905092915050565b6000819050919050565b6117d581610d86565b82525050565b60006117e783836117cc565b60208301905092915050565b6000602082019050919050565b611809816117ac565b61181381846117b7565b925061181e826117c2565b8060005b8381101561184f57815161183687826117db565b9650611841836117f3565b925050600181019050611822565b505050505050565b600060029050919050565b6000819050919050565b60008160001c9050919050565b6000819050919050565b60006118966118918361186c565b611879565b9050919050565b60006118a98254611883565b9050919050565b6000600182019050919050565b6118c681611857565b6118d081846117b7565b92506118db82611862565b8060005b83811015611913576118f08261189d565b6118fa87826117db565b9650611905836118b0565b9250506001810190506118df565b505050505050565b600060a082019050611930600083018661179d565b61193d6020830185611800565b61194a60608301846118bd565b949350505050565b60008115159050919050565b61196781611952565b811461197257600080fd5b50565b6000815190506119848161195e565b92915050565b6000602082840312156119a05761199f610cc3565b5b60006119ae84828501611975565b91505092915050565b7f5369676e617475726520766572696669636174696f6e206661696c6564000000600082015250565b60006119ed601d836115ea565b91506119f8826119b7565b602082019050919050565b60006020820190508181036000830152611a1c816119e0565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b6000611a4682611a23565b91506bffffffffffffffffffffffff8203611a6457611a63611667565b5b600182019050919050565b7f77616c6c65743a20696e76616c6964206e6f6e63650000000000000000000000600082015250565b6000611aa56015836115ea565b9150611ab082611a6f565b602082019050919050565b60006020820190508181036000830152611ad481611a98565b9050919050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000611b11600a836115ea565b9150611b1c82611adb565b602082019050919050565b60006020820190508181036000830152611b4081611b04565b9050919050565b600081519050919050565b60005b83811015611b70578082015181840152602081019050611b55565b60008484015250505050565b6000611b8782611b47565b611b91818561152a565b9350611ba1818560208601611b52565b80840191505092915050565b6000611bb98284611b7c565b91508190509291505056fea26469706673582212201850fd8c40342cad32b5905210139decf58d17c9824ea976e180fb5c9f14849d64736f6c63430008110033";

type MyTouchIdWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTouchIdWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyTouchIdWallet__factory extends ContractFactory {
  constructor(...args: MyTouchIdWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    _qValues: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
    _ellipticCurve: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyTouchIdWallet> {
    return super.deploy(
      anEntryPoint,
      anOwner,
      _qValues,
      _ellipticCurve,
      overrides || {}
    ) as Promise<MyTouchIdWallet>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    _qValues: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
    _ellipticCurve: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anOwner,
      _qValues,
      _ellipticCurve,
      overrides || {}
    );
  }
  override attach(address: string): MyTouchIdWallet {
    return super.attach(address) as MyTouchIdWallet;
  }
  override connect(signer: Signer): MyTouchIdWallet__factory {
    return super.connect(signer) as MyTouchIdWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTouchIdWalletInterface {
    return new utils.Interface(_abi) as MyTouchIdWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyTouchIdWallet {
    return new Contract(address, _abi, signerOrProvider) as MyTouchIdWallet;
  }
}
